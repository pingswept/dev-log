Useful links

 * http://hipstercircuits.com/pypruss-a-simple-pru-python-binding-for-beaglebone/
 * https://bitbucket.org/intelligentagent/pypruss
 * http://boxysean.com/blog/2012/08/12/first-steps-with-the-beaglebone-pru/
 * https://github.com/rascalmicro/am335x_pru_package

Building Sean McIntyre's DMX library

    # (First, log in to BBB via SSH.)
    git clone https://github.com/rascalmicro/beaglebone-DMX
    cd pasm/pasm_source
    ./linuxbuild # builds executable called pasm at beaglebone-DMX/pasm/pasm

Can successfully execute

    ./pasm
    
    PRU Assembler Version 0.80
    Copyright (C) 2005-2012 by Texas Instruments Inc.
    
    Usage: pasm [-bcmLldz] [-Dname=value] [-Cname] InFile [OutFileBase]
    
        b  - Create little endian binary output (*.bin)
        c  - Create 'C array' binary output (*_bin.h)
        m  - Create 'image' binary output (*.img)
        L  - Create annotated source file style listing (*.txt)
        l  - Create raw listing file (*.lst)
        d  - Create pView debug file (*.dbg)
        z  - Enable debug messages
    
        D  - Set equate 'name' to 1 using '-Dname', or to any
             value using '-Dname=value'
        C  - Name the C array in 'C array' binary output
             to 'name' using '-Cname'

Then build the PRUSS userspace kernel driver, DMX server, and DMX client. 

    cd ..
    make
    make --directory=libprussdrv
    make[1]: Entering directory '/root/beaglebone-DMX/libprussdrv'
    gcc -I. -Wall -I../include   -c -g -O0 -D__DEBUG -o debug/prussdrv.o prussdrv.c
    ar rc ../lib/libprussdrvd.a debug/prussdrv.o 
    gcc -I. -Wall -I../include   -c -O3 -mtune=cortex-a8 -march=armv7-a -o release/prussdrv.o prussdrv.c
    ar rc ../lib/libprussdrv.a release/prussdrv.o 
    make[1]: Leaving directory '/root/beaglebone-DMX/libprussdrv'
    make --directory=libprussdrv
    make[1]: Entering directory '/root/beaglebone-DMX/libprussdrv'
    make[1]: Nothing to be done for 'all'.
    make[1]: Leaving directory '/root/beaglebone-DMX/libprussdrv'
    gcc -Wall -Iinclude -D__DEBUG -O2 -mtune=cortex-a8 -march=armv7-a -c -o obj/dmx.o src/dmx.c 
    src/dmx.c: In function ‘LOCAL_udp_listen’:
    src/dmx.c:200:2: warning: passing argument 2 of ‘bind’ from incompatible pointer type [enabled by default]
    In file included from /usr/include/netinet/in.h:24:0,
                     from /usr/include/arpa/inet.h:22,
                     from src/dmx.c:16:
    /usr/include/sys/socket.h:124:12: note: expected ‘const struct sockaddr *’ but argument is of type ‘struct sockaddr_in *’
    src/dmx.c:208:3: warning: passing argument 5 of ‘recvfrom’ from incompatible pointer type [enabled by default]
    In file included from /usr/include/netinet/in.h:24:0,
                     from /usr/include/arpa/inet.h:22,
                     from src/dmx.c:16:
    /usr/include/sys/socket.h:175:16: note: expected ‘struct sockaddr * __restrict__’ but argument is of type ‘struct sockaddr_in *’
    src/dmx.c:208:3: warning: pointer targets in passing argument 6 of ‘recvfrom’ differ in signedness [-Wpointer-sign]
    In file included from /usr/include/netinet/in.h:24:0,
                     from /usr/include/arpa/inet.h:22,
                     from src/dmx.c:16:
    /usr/include/sys/socket.h:175:16: note: expected ‘socklen_t * __restrict__’ but argument is of type ‘int *’
    gcc -Wall -Iinclude -D__DEBUG -O2 -mtune=cortex-a8 -march=armv7-a -o bin/dmx obj/dmx.o -Llib -lprussdrv -lpthread
    pasm/pasm -b src/dmx.p bin/dmx
    
    
    PRU Assembler Version 0.80
    Copyright (C) 2005-2012 by Texas Instruments Inc.
    
    
    Pass 2 : 0 Error(s), 0 Warning(s)
    
    Writing Code Image of 85 word(s)
    
    rm lib/libprussdrvd.a lib/libprussdrv.a

Then load PRUSS driver (from https://github.com/boxysean/beaglebone-DMX/issues/2#issuecomment-21139799)

    cd /boot
    cp am335x-boneblack.dtb am335x-boneblack.dtb_orig
    dtc -I dtb -O dts am335x-boneblack.dtb > am335x-boneblack.dts_orig
    
    The change to the dts file:
    pruss@4a30000 {
    ...
    status = "disabled";
    ...
    };
    
    To:
    pruss@4a30000 {
    ...
    status = "okay";
    ...
    };
    
    After any modifications have been made (maybe copy the file first so that you have a backup), it can be converted back into binary form using:
    
    dtc -I dts -O dtb am335x-boneblack.dts_pru > am335x-boneblack.dtb_pru
    cp am335x-boneblack.dtb_pru am335x-boneblack.dtb
    
    Reboot, now no errors!
    
    root@beaglebone:~/bbdmx/bin# ./dmx
    INFO: Starting dmx example.
    AM33XX
    INFO: Initializing example.
    INFO: Executing example.
    File ./dmx.bin open passed
